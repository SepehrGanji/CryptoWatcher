name: CRYPTOWATCHER

on: 
  push:
    branches:
      - '*'

jobs:

  install:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    
    - name: Get yarn cache directory
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"

    - uses: actions/cache@v2
      id: yarn-cache
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-

    - name: Install dependencies
      if: steps.yarn-cache.outputs.cache-hit != 'true'
      run: yarn install

    - uses: actions/cache@v2
      with:
        path: node_modules
        key: ${{ runner.os }}-node-${{ hashFiles('**/yarn.lock') }}
        

  lint:
    needs: install
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    
    - uses: actions/cache@v2
      with:
        path: node_modules
        key: ${{ runner.os }}-node-${{ hashFiles('**/yarn.lock') }}
    - run: yarn lint

      
  build:
    needs: install
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    
    - uses: actions/cache@v2
      with: 
        path: node_modules
        key: ${{ runner.os }}-node-${{ hashFiles('**/yarn.lock') }}
    - run: yarn build:ts

      
  test:
    needs: install
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - run: sudo apt-get install sqlite3 libsqlite3-dev
    
    - uses: actions/cache@v2
      with:
        path: node_modules
        key: ${{ runner.os }}-node-${{ hashFiles('**/yarn.lock') }}
    - run: echo "NODE_ENV=test" >> $GITHUB_ENV

    - run: yarn test